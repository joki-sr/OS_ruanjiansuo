import requests
import json

def is_random_string(text):
    """
    This function judges if a string is random generated by LLM.
    """
    # 定义 API 端点和请求头
    BASE_URL = "http://192.168.141.110:8002/v1"
    MODELS_URL = f"{BASE_URL}/models"
    CHAT_COMPLETIONS_URL = f"{BASE_URL}/chat/completions"
    COMPLETIONS_URL = f"{BASE_URL}/completions"
    HEADERS = {"Content-Type": "application/json"}

    try:
        # 获取可用的模型列表
        models_response = requests.get(MODELS_URL)
        models_response.raise_for_status()  # 如果请求失败则抛出异常
        model = models_response.json()['data'][0]['id']
    except (requests.exceptions.RequestException, KeyError, IndexError) as e:
        print(f"错误：无法获取模型ID。 {e}")
        exit()

    try:
        # 第一步：获取思考过程
        chat_payload = {
            "model": model,
            "messages": [
                {
                    "role": "user",
                    "content": f"请你判断下面这个字符串是否是随机生成的：{text}",
                }
            ],
            "guided_choice": ["yes", "no"],
        }

        resp1_req = requests.post(CHAT_COMPLETIONS_URL, headers=HEADERS, data=json.dumps(chat_payload))
        resp1_req.raise_for_status()
        reasoning = resp1_req.json()['choices'][0]['message']['reasoning_content']
        print("reasoning: ", reasoning)

        # 第二步：根据思考过程输出yes or no
        prompt_content = f'''<|im_start|>user
    String: "{text}"
    这个字符串具有自然语言语义吗？<|im_end|>
    <|im_start|>assistant
    <think>
    {reasoning}
    </think>'''

        completion_payload = {
            "model": model,
            "prompt": prompt_content,
            "guided_choice": ["yes", "no"],
            "max_tokens": 5,
            "temperature": 0,
        }

        resp2_req = requests.post(COMPLETIONS_URL, headers=HEADERS, data=json.dumps(completion_payload))
        resp2_req.raise_for_status()
        result = resp2_req.json()['choices'][0]['text']
        print("final result: ", result.strip())

    except requests.exceptions.RequestException as e:
        print(f"请求过程中发生错误: {e}")
    except (KeyError, IndexError) as e:
        print(f"错误：无法解析API响应。 {e}")

    return result == "yes"
